#include <SDL.h>
#include <SDL_ttf.h>
#include <stdio.h>
#include <stdbool.h>

// Definir constantes
#define WINDOW_WIDTH 800
#define WINDOW_HEIGHT 600
#define SUBJECT_COUNT 5

// Estrutura para uma matéria
typedef struct {
    char name[30];
    char boss_challenge[100];
} Subject;

// Função para renderizar texto
void renderText(SDL_Renderer *renderer, TTF_Font *font, const char *text, int x, int y) {
    SDL_Surface *surface = TTF_RenderText_Solid(font, text, (SDL_Color){0, 0, 0});
    SDL_Texture *texture = SDL_CreateTextureFromSurface(renderer, surface);
    int width = surface->w;
    int height = surface->h;

    SDL_Rect destRect = {x, y, width, height};
    SDL_RenderCopy(renderer, texture, NULL, &destRect);
    
    SDL_FreeSurface(surface);
    SDL_DestroyTexture(texture);
}

// Tela Inicial
void showStartScreen(SDL_Renderer *renderer, TTF_Font *font) {
    SDL_SetRenderDrawColor(renderer, 255, 255, 255); // Fundo branco
    SDL_RenderClear(renderer);
    renderText(renderer, font, "Bem-vindo ao Jogo de Aprendizagem!", 100, 50);
    renderText(renderer, font, "Pressione ENTER para começar", 100, 150);
    SDL_RenderPresent(renderer);

    SDL_Event event;
    while (true) {
        SDL_PollEvent(&event);
        if (event.type == SDL_QUIT) {
            exit(0);
        }
        if (event.type == SDL_KEYDOWN && event.key.keysym.sym == SDLK_RETURN) {
            break;
        }
    }
}

// Menu de Matérias
void showSubjectMenu(SDL_Renderer *renderer, TTF_Font *font, Subject subjects[], int subject_index) {
    SDL_SetRenderDrawColor(renderer, 255, 255, 255); // Fundo branco
    SDL_RenderClear(renderer);
    renderText(renderer, font, "Escolha uma Matéria:", 100, 50);
    
    for (int i = 0; i < subject_index; i++) {
        renderText(renderer, font, subjects[i].name, 100, 100 + (i * 30));
    }
    
    SDL_RenderPresent(renderer);
}

// Desafio Interativo
void showChallenge(SDL_Renderer *renderer, TTF_Font *font, Subject subject) {
    SDL_SetRenderDrawColor(renderer, 255, 255, 255); // Fundo branco
    SDL_RenderClear(renderer);
    renderText(renderer, font, subject.boss_challenge, 100, 50);
    renderText(renderer, font, "Pressione R para resposta correta", 100, 150);
    renderText(renderer, font, "Pressione F para resposta incorreta", 100, 200);
    SDL_RenderPresent(renderer);

    SDL_Event event;
    while (true) {
        SDL_PollEvent(&event);
        if (event.type == SDL_QUIT) {
            exit(0);
        }
        if (event.type == SDL_KEYDOWN) {
            if (event.key.keysym.sym == SDLK_r) {
                renderText(renderer, font, "Você venceu o desafio!", 100, 300);
                SDL_RenderPresent(renderer);
                SDL_Delay(2000);
                break;
            } else if (event.key.keysym.sym == SDLK_f) {
                renderText(renderer, font, "Desafio falhou. Tente novamente!", 100, 300);
                SDL_RenderPresent(renderer);
                SDL_Delay(2000);
                break;
            }
        }
    }
}

// Função Principal
int main(int argc, char *argv[]) {
    SDL_Init(SDL_INIT_VIDEO);
    TTF_Init();

    SDL_Window *window = SDL_CreateWindow("Jogo de Aprendizagem", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, WINDOW_WIDTH, WINDOW_HEIGHT, 0);
    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    TTF_Font *font = TTF_OpenFont("arial.ttf", 24); // Certifique-se de ter este arquivo

    // Definir matérias
    Subject subjects[SUBJECT_COUNT] = {
        {"Matemática", "Qual é a raiz quadrada de 16?"},
        {"História", "Quem foi o primeiro presidente do Brasil?"},
        {"Geografia", "Qual é a capital da França?"},
        {"Ciências", "O que é fotossíntese?"},
        {"Português", "O que é um substantivo?"}
    };

    // Exibir tela inicial
    showStartScreen(renderer, font);
    
    // Exibir menu de matérias
    showSubjectMenu(renderer, font, subjects, SUBJECT_COUNT);

    // Mostrar desafios para a primeira matéria
    for (int i = 0; i < SUBJECT_COUNT; i++) {
        showChallenge(renderer, font, subjects[i]);
    }

    // Limpar e sair
    TTF_CloseFont(font);
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    TTF_Quit();
    SDL_Quit();
    return 0;
}
